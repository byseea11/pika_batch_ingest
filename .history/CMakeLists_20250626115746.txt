cmake_minimum_required(VERSION 3.10)

# 设置项目名称
project(bingest)
set(CMAKE_BUILD_TYPE Debug)

# 设置 C++17 标准
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 包含头文件目录
include_directories(include)  # 全局头文件路径
include_directories(test)      # 测试头文件路径

# 如果编译器版本小于 9，链接 stdc++fs
if(CMAKE_COMPILER_IS_GNUCXX AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS "9")
    add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0) # 处理 stdc++fs 的问题
    target_link_libraries(bingest stdc++fs)
endif()

# 添加 Google Test 子目录
add_subdirectory(third/googletest)

# 设置线程池库路径
add_subdirectory(third/ThreadPool)

# 包含 FetchContent 来下载依赖
include(FetchContent)

# 下载 nlohmann/json 库
FetchContent_Declare(
    nlohmann_json
    GIT_REPOSITORY https://github.com/nlohmann/json.git
    GIT_TAG        v3.11.2 # 使用特定版本，或者使用最新的提交
)

# 下载并将库包含到项目中
FetchContent_MakeAvailable(nlohmann_json)

# 设置源文件，递归匹配所有 .cpp 文件
file(GLOB_RECURSE SOURCES "src/*.cpp")

# 包含测试文件目录，递归匹配所有 .cpp 测试文件
file(GLOB_RECURSE TEST_SOURCES "test/*.cpp")

# 添加可执行文件
add_executable(bingest ${SOURCES})

# 添加测试可执行文件，包含测试源文件
add_executable(test_bingest ${TEST_SOURCES})

# 编译主程序
add_executable(bingest ${SOURCES})
target_link_libraries(bingest PRIVATE nlohmann_json::nlohmann_json)

# 编译测试程序
add_executable(test_bingest ${TEST_SOURCES})
target_link_libraries(test_bingest PRIVATE gtest gtest_main)

# 启用测试功能
enable_testing()
# 运行测试时使用 CTest 自动化测试
add_test(NAME test_bingest COMMAND test_bingest)
